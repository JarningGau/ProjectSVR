[{"path":[]},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement gjn1106@mail.ustc.edu.cn. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"jarninggau.github.io/ProjectSVR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"jarninggau.github.io/ProjectSVR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Jianing Gao Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"jarninggau.github.io/ProjectSVR/LOG.html","id":"log","dir":"","previous_headings":"","what":"Log","title":"NA","text":"2022-07-12 TODO Enhancement Try speed MergeCells() function. 2022-07-11 Done import mlr3verse properly Done Add normalization method FitEnsemblSVM() FitEnsemblMultiClassif() PredictNewdata() ProjectNewdata() 2022-06-11 Enhancement Plot VD results. 2022-06-09 Done Enhancement Normalize feature.mat cells (sum 1) model construction prediction. 2022-05-30 Done BUG FitEnsembleSVM() | feature.mat data.frame, input matrix. error occurs. Want clear error information. 2022-05-28 Enhancement Two prediction function confused new users. Try merge via generic method. Enhancement Add plot function visualizing coords refinement. Done BUG AddProjQual() function generated duplicated results @cellmeta slot execute twice times. Want codes colnames check. 2022-05-24 Done LabelTransfer() SVM model. ​ FitEnsemblMultiClassif() ​ PredictNewdata() ​ MajorityVote() Done Test functions. 2022-05-23 Done Differential expression analysis VarDecompose() GetExpressionShift() TODO ClusterGenes() Done Test VarDecompose() GetExpressionShift() 2022-05-19 Done Add CellProject object store results generated cell projection. Done New function: RefineProjection 2022-04-30 Done ProjectNewdata() add warning info fill 0 enough feature case. (case2 Ythdc2-KO data) TODO Add function refine low confidence mapping coords. TODO LabelTransfer() Add SVM method. 2022-03-27 Done ggplot2 scProject package. import ggplot2 proper package. 2022-03-26 TODO Add new signature scoring method – UCell. Done RNA velocity scenario 2 task 2022-03-25 TODO Differential expressed genes. cacoa package solved problem. 2022-03-24 Done Optimize mapQ function: Markov affinity matrix replaces distance matrix calculate PCCs. Done good NN-based mean distance performs better. Done 2022-03-23 Done mTCA, levels’ cellular annotation. 2022-03-22 Done Add two mapQ functions Global (random N) rather local (KNN) topological similarity Jaccard index 2022-03-21 scenario2: time-course gonocyte-spermatogonia-transition Done optimized model training step. Drop outliers cells model training; TODO redo cNMF cluster-based rather grid-based pseudocells; Done number cells different cell type balanced (balanced sampling replaces random sampling). TODO use protein coding genes. Done Boost results 2022-03-20 Done Test MakeMetaCells() TODO Drop ml3verse dependence. Use e1071 SVR directly. 2022-03-18 Speed MergeCells() Add LabelTransfer() cell type annotation projection. Add MakeMetaCell() function group transcriptome similar cells meta cells speed cNMF. TODO Add AddProjQaul(), cluster-based map quality. TODO Implementation DE analysis model. 2022-03-17 Add NNHelper() function calculating nearest neightbors. Modifiy EstimateKnnDensity(). Test . Drop @param cores. Implementation AddProjQual(), evaluating projection/mapping quality. 2022-03-15 test cNMF.R worked implementation FitEnsembleSVM(), ComputeModuleScore() 2022-03-14 add function merge bins, merge mesh points. 2022-03-12 EstimateKnnDensity()注意数字在R中默认为float，这在利用reticulate和python交互时容易出现类型错误 函数中需要一个类型检查。","code":""},{"path":"jarninggau.github.io/ProjectSVR/articles/quick_start.html","id":"download-related-dataset","dir":"Articles","previous_headings":"","what":"Download related dataset","title":"Quick start of ProjectSVR","text":"","code":"library(ProjectSVR) library(Seurat) library(tidyverse) options(timeout = max(3600, getOption(\"timeout\"))) `%notin%` <- Negate(`%in%`) # reference datass download.file(url = \"https://zenodo.org/record/8147304/files/disco_pbmc_small.seurat.slim.rds\",     destfile = \"disco_pbmc_small.seurat.slim.rds\") # query data download.file(url = \"https://zenodo.org/record/8147304/files/query_pbmc_small.seurat.slim.rds\",     destfile = \"query_pbmc_small.seurat.slim.rds\")"},{"path":"jarninggau.github.io/ProjectSVR/articles/quick_start.html","id":"build-reference-model","dir":"Articles","previous_headings":"","what":"Build Reference Model","title":"Quick start of ProjectSVR","text":"","code":"seu.ref <- readRDS(\"disco_pbmc_small.seurat.slim.rds\")  DimPlot(seu.ref, pt.size = 0.4) + scale_color_manual(values = seu.ref@misc$data.refplot$colors) +     geom_text(inherit.aes = F, data = seu.ref@misc$data.refplot$text.pos, mapping = aes(x, y, label = label),         size = 4)"},{"path":"jarninggau.github.io/ProjectSVR/articles/quick_start.html","id":"extract-signatures","dir":"Articles","previous_headings":"Build Reference Model","what":"Extract signatures","title":"Quick start of ProjectSVR","text":"extract top25 marker genes cell type (ribosomal mitochondrial genes removed).","code":"data(ribo.genes)  table(Idents(seu.ref)) ##  ##               memory CD4 T                    CD16 NK  ##                        200                        200  ##                   memory B                naive CD4 T  ##                        200                        200  ##                 GZMB CD8 T         proliferation T/NK  ##                        200                        200  ##                naive CD8 T            cytotoxic CD4 T  ##                        200                        200  ##                    naive B                       Treg  ##                        200                        200  ##                    GZMK NK                 GZMK CD8 T  ##                        200                        200  ##                       MAIT              CD16 monocyte  ##                        200                        200  ##              CD14 monocyte                   platelet  ##                        200                        200  ##                plasma cell         CD14/CD16 monocyte  ##                        200                        200  ##                        pDC                        cDC  ##                        200                        200  ##                 neutrophil                        RBC  ##                        200                        200  ## proliferation myeloid cell                        HSC  ##                        110                        108 seu.ref[[\"RNA\"]]@counts <- seu.ref[[\"RNA\"]]@data seu.ref <- NormalizeData(seu.ref) all.markers <- mcFindAllMarkers(seu.ref, do.flatten = F, n.cores = 20)  top.genes <- lapply(all.markers, function(xx) {     yy <- subset(xx, p_val_adj < 1e-06 & avg_log2FC > log2(1.5))     yy <- subset(yy, Gene.name.uniq %notin% ribo.genes)     yy <- yy[!grepl(\"^MT-\", yy$Gene.name.uniq), ]     head(yy$Gene.name.uniq, 25) })  sapply(top.genes, length) ##               memory CD4 T                    CD16 NK  ##                         25                         25  ##                   memory B                naive CD4 T  ##                         25                         25  ##                 GZMB CD8 T         proliferation T/NK  ##                         25                         25  ##                naive CD8 T            cytotoxic CD4 T  ##                         25                         25  ##                    naive B                       Treg  ##                         25                         25  ##                    GZMK NK                 GZMK CD8 T  ##                         25                         25  ##                       MAIT              CD16 monocyte  ##                         25                         25  ##              CD14 monocyte                   platelet  ##                         25                         25  ##                plasma cell         CD14/CD16 monocyte  ##                         25                         25  ##                        pDC                        cDC  ##                         25                         25  ##                 neutrophil                        RBC  ##                         25                         25  ## proliferation myeloid cell                        HSC  ##                         25                         25 names(top.genes) <- paste0(\"feature_\", 1:length(top.genes))  bg.genes <- do.call(c, top.genes) %>%     unique()"},{"path":"jarninggau.github.io/ProjectSVR/articles/quick_start.html","id":"transfer-raw-count-matrix-to-gene-set-score-matrix","dir":"Articles","previous_headings":"Build Reference Model","what":"Transfer raw count matrix to gene set score matrix","title":"Quick start of ProjectSVR","text":"","code":"seu.ref <- seu.ref[bg.genes, ] seu.ref <- UCell::AddModuleScore_UCell(seu.ref, features = top.genes, ncores = 20) gss.mat <- select(seu.ref@meta.data, ends_with(\"_UCell\"))"},{"path":"jarninggau.github.io/ProjectSVR/articles/quick_start.html","id":"training-reference-model","dir":"Articles","previous_headings":"Build Reference Model","what":"Training reference model","title":"Quick start of ProjectSVR","text":"","code":"embeddings.df <- FetchData(seu.ref, vars = paste0(\"UMAP_\", 1:2)) batch.size = 4000  # number of subsampled cells for each SVR model  n.models = 5  # number of SVR models trained umap.model <- FitEnsembleSVM(feature.mat = gss.mat, emb.mat = embeddings.df, do.norm = \"L2\", batch.size = batch.size,     n.models = n.models, cores = 5)"},{"path":"jarninggau.github.io/ProjectSVR/articles/quick_start.html","id":"save-the-reference-model","dir":"Articles","previous_headings":"Build Reference Model","what":"Save the reference model","title":"Quick start of ProjectSVR","text":"ref.cellmeta stores: [optional] colors: plots [optional] text.pos: text annotation plots meta.data: cell meta data (embeddings + cell type information)","code":"ref.cellmeta <- seu.ref@misc$data.refplot ref.cellmeta$meta.data <- FetchData(seu.ref, vars = c(paste0(\"UMAP_\", 1:2), \"cell_type\", \"cell_subtype\"))  reference <- list(   \"models\" = list(     \"umap\" = umap.model   ),   \"genes\" = list(     \"gene.sets\" = top.genes, # list     \"bg.genes\" = bg.genes # vector   ),   \"ref.cellmeta\" = ref.cellmeta # list for reference plot )"},{"path":[]},{"path":"jarninggau.github.io/ProjectSVR/articles/quick_start.html","id":"reference-mapping","dir":"Articles","previous_headings":"Map Query to Reference","what":"Reference mapping","title":"Quick start of ProjectSVR","text":"","code":"seu.q <- readRDS(\"query_pbmc_small.seurat.slim.rds\") seu.q[[\"RNA\"]]@counts <- seu.q[[\"RNA\"]]@data seu.q <- ProjectSVR::MapQuery(seu.q, reference = reference, ncores = 5)  p1 <- DimPlot(seu.q, reduction = \"ref.umap\", group.by = \"cell_type\", label = T) p2 <- DimPlot(seu.q, reduction = \"ref.umap\", group.by = \"cell_subtype\", label = T) (p1 + p2) & ggsci::scale_color_d3(\"category20\") seu.q$cell_subtype2 <- seu.q$cell_subtype  PlotProjection(seu.q, reference, split.by = \"cell_subtype2\", ref.color.by = \"cell_subtype\", ref.size = 0.5,     ref.alpha = 0.3, query.size = 1, query.alpha = 0.5, n.row = 4)"},{"path":"jarninggau.github.io/ProjectSVR/articles/quick_start.html","id":"label-transfer","dir":"Articles","previous_headings":"Map Query to Reference","what":"Label transfer","title":"Quick start of ProjectSVR","text":"","code":"seu.q <- ProjectSVR::LabelTransfer(seu.q, reference, ref.label.col = \"cell_subtype\")  DimPlot(seu.q, reduction = \"ref.umap\", group.by = \"knn.pred.celltype\") + scale_color_manual(values = reference$ref.cellmeta$colors) data.stat <- table(seu.q$cell_subtype, seu.q$knn.pred.celltype) pheatmap::pheatmap(data.stat, cluster_cols = F, display_numbers = T, number_format = \"%.0f\", number_color = \"black\") sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: CentOS Linux 7 (Core) ##  ## Matrix products: default ## BLAS:   /opt/R4.1/lib64/R/lib/libRblas.so ## LAPACK: /opt/R4.1/lib64/R/lib/libRlapack.so ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ##  [1] forcats_0.5.2      stringr_1.4.1      dplyr_1.0.10       purrr_0.3.4        ##  [5] readr_2.1.2        tidyr_1.2.1        tibble_3.1.8       ggplot2_3.4.1      ##  [9] tidyverse_1.3.2    sp_1.5-0           SeuratObject_4.1.2 Seurat_4.2.0       ## [13] ProjectSVR_0.1.0   ##  ## loaded via a namespace (and not attached): ##   [1] utf8_1.2.2             reticulate_1.26        tidyselect_1.1.2       ##   [4] mlr3learners_0.5.4     htmlwidgets_1.5.4      BiocParallel_1.28.3    ##   [7] grid_4.1.2             Rtsne_0.16             mlr3misc_0.11.0        ##  [10] munsell_0.5.0          codetools_0.2-18       bbotk_0.5.4            ##  [13] ragg_1.2.2             ica_1.0-3              future_1.28.0          ##  [16] miniUI_0.1.1.1         mlr3verse_0.2.5        withr_2.5.0            ##  [19] spatstat.random_3.0-1  colorspace_2.0-3       progressr_0.11.0       ##  [22] highr_0.9              knitr_1.40             uuid_1.1-0             ##  [25] rstudioapi_0.14        stats4_4.1.2           ROCR_1.0-11            ##  [28] tensor_1.5             listenv_0.8.0          labeling_0.4.2         ##  [31] mlr3tuning_0.14.0      lgr_0.4.4              polyclip_1.10-0        ##  [34] pheatmap_1.0.12        farver_2.1.1           rprojroot_2.0.3        ##  [37] parallelly_1.32.1      vctrs_0.5.1            generics_0.1.3         ##  [40] clusterCrit_1.2.8      xfun_0.33              R6_2.5.1               ##  [43] doParallel_1.0.17      clue_0.3-61            isoband_0.2.5          ##  [46] spatstat.utils_3.0-1   cachem_1.0.6           assertthat_0.2.1       ##  [49] promises_1.2.0.1       scales_1.2.1           googlesheets4_1.0.1    ##  [52] rgeos_0.5-9            gtable_0.3.1           globals_0.16.1         ##  [55] goftest_1.2-3          rlang_1.0.6            systemfonts_1.0.4      ##  [58] GlobalOptions_0.1.2    splines_4.1.2          lazyeval_0.2.2         ##  [61] gargle_1.2.1           paradox_0.10.0         spatstat.geom_3.0-3    ##  [64] broom_1.0.1            checkmate_2.1.0        modelr_0.1.9           ##  [67] yaml_2.3.5             reshape2_1.4.4         abind_1.4-5            ##  [70] mlr3_0.14.0            backports_1.4.1        httpuv_1.6.6           ##  [73] tools_4.1.2            ellipsis_0.3.2         spatstat.core_2.4-4    ##  [76] jquerylib_0.1.4        RColorBrewer_1.1-3     BiocGenerics_0.40.0    ##  [79] ggridges_0.5.3         Rcpp_1.0.9             plyr_1.8.7             ##  [82] rpart_4.1.16           deldir_1.0-6           pbapply_1.5-0          ##  [85] GetoptLong_1.0.5       cowplot_1.1.1          S4Vectors_0.32.4       ##  [88] zoo_1.8-11             haven_2.5.1            ggrepel_0.9.1          ##  [91] cluster_2.1.4          fs_1.5.2               magrittr_2.0.3         ##  [94] data.table_1.14.2      scattermore_0.8        circlize_0.4.15        ##  [97] reprex_2.0.2           lmtest_0.9-40          RANN_2.6.1             ## [100] googledrive_2.0.0      fitdistrplus_1.1-8     matrixStats_0.62.0     ## [103] hms_1.1.2              patchwork_1.1.2        mime_0.12              ## [106] evaluate_0.16          xtable_1.8-4           readxl_1.4.1           ## [109] IRanges_2.28.0         gridExtra_2.3          shape_1.4.6            ## [112] UCell_1.3.1            compiler_4.1.2         mlr3cluster_0.1.4      ## [115] KernSmooth_2.23-20     crayon_1.5.1           htmltools_0.5.3        ## [118] tzdb_0.3.0             mgcv_1.8-40            later_1.3.0            ## [121] lubridate_1.8.0        DBI_1.1.3              formatR_1.12           ## [124] dbplyr_2.2.1           ComplexHeatmap_2.10.0  MASS_7.3-58.1          ## [127] mlr3data_0.6.1         Matrix_1.5-1           cli_3.4.1              ## [130] parallel_4.1.2         igraph_1.3.5           pkgconfig_2.0.3        ## [133] pkgdown_2.0.6          plotly_4.10.0          spatstat.sparse_3.0-0  ## [136] xml2_1.3.3             foreach_1.5.2          bslib_0.4.0            ## [139] mlr3fselect_0.7.2      rvest_1.0.3            digest_0.6.29          ## [142] sctransform_0.3.5      RcppAnnoy_0.0.19       mlr3filters_0.6.0      ## [145] spatstat.data_3.0-0    cellranger_1.1.0       rmarkdown_2.16         ## [148] leiden_0.4.3           uwot_0.1.14            curl_5.0.1             ## [151] shiny_1.7.2            rjson_0.2.21           lifecycle_1.0.3        ## [154] nlme_3.1-155           jsonlite_1.8.0         mlr3tuningspaces_0.3.0 ## [157] desc_1.4.2             viridisLite_0.4.1      fansi_1.0.3            ## [160] pillar_1.8.1           ggsci_2.9              lattice_0.20-45        ## [163] fastmap_1.1.0          httr_1.4.4             survival_3.4-0         ## [166] glue_1.6.2             mlr3viz_0.5.10         png_0.1-7              ## [169] iterators_1.0.14       stringi_1.7.6          sass_0.4.2             ## [172] mlr3pipelines_0.4.2    palmerpenguins_0.1.1   textshaping_0.3.6      ## [175] memoise_2.0.1          irlba_2.3.5            future.apply_1.9.1"},{"path":"jarninggau.github.io/ProjectSVR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jianing Gao. Author, maintainer.","code":""},{"path":"jarninggau.github.io/ProjectSVR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gao J (2023). ProjectSVR: Projecting Query scRNA-seq Data Onto Reference Atlas Via Support Vector Regression. R package version 0.1.0, https://github.com/JarningGau/ProjectSVR.","code":"@Manual{,   title = {ProjectSVR: Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support Vector Regression},   author = {Jianing Gao},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/JarningGau/ProjectSVR}, }"},{"path":"jarninggau.github.io/ProjectSVR/index.html","id":"projectsvr-","dir":"","previous_headings":"","what":"Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support\n    Vector Regression","title":"Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support\n    Vector Regression","text":"ProjectSVR machine learning-based algorithm mapping query cells onto well-constructed reference atlas.","code":""},{"path":"jarninggau.github.io/ProjectSVR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support\n    Vector Regression","text":"Install development version GitHub use:","code":"install.packages(\"devtools\") devtools::install_github(\"JarningGau/ProjectSVR\")"},{"path":[]},{"path":"jarninggau.github.io/ProjectSVR/index.html","id":"tutorials","dir":"","previous_headings":"Usage/Demos","what":"Tutorials","title":"Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support\n    Vector Regression","text":"Mapping PBMC dataset onto pre-build PBMC reference (DISCO database). Mapping tumor-infiltrated T cell pan-cancer T cell landscape.","code":""},{"path":"jarninggau.github.io/ProjectSVR/index.html","id":"downloading-pre-built-references","dir":"","previous_headings":"Usage/Demos","what":"Downloading pre-built references:","title":"Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support\n    Vector Regression","text":"can download pre-built references Zenodo.","code":""},{"path":"jarninggau.github.io/ProjectSVR/index.html","id":"installation-notes","dir":"","previous_headings":"","what":"Installation notes","title":"Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support\n    Vector Regression","text":"ProjectSVR successfully installed Linux using devtools package install GitHub. Dependencies: R >= 4.1 reticulate AUCell","code":""},{"path":"jarninggau.github.io/ProjectSVR/index.html","id":"reproducing-results-from-manuscript","dir":"","previous_headings":"","what":"Reproducing results from manuscript","title":"Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support\n    Vector Regression","text":"Code reproduce results Gao et al. manuscript available github.com/jarninggau/ProjectSVR_reproducibility.","code":""},{"path":"jarninggau.github.io/ProjectSVR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Projecting Query scRNA-seq Data Onto A Reference Atlas Via Support\n    Vector Regression","text":"Please note ProjectSVR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AbundanceTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Cellular Abundance Test — AbundanceTest","title":"Differential Cellular Abundance Test — AbundanceTest","text":"Computes Wilcoxon rank sum test cell type two groups.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AbundanceTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Cellular Abundance Test — AbundanceTest","text":"","code":"AbundanceTest(cellmeta, celltype.col, sample.col, group.col)"},{"path":"jarninggau.github.io/ProjectSVR/reference/AbundanceTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Cellular Abundance Test — AbundanceTest","text":"cellmeta data frame containing metadata information cells. celltype.col name column cellmeta contains cell type information. sample.col name column cellmeta contains sample identifiers. group.col name column cellmeta specifies grouping variable.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AbundanceTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Cellular Abundance Test — AbundanceTest","text":"data frame containing results Wilcoxon rank sum tests cell type.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AbundanceTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential Cellular Abundance Test — AbundanceTest","text":"function takes data frame cellmeta, character string celltype.col, character string sample.col, character string group.col input. calculates fold change, mean percentage, p-value cell type using Wilcoxon rank sum test.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AbundanceTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Cellular Abundance Test — AbundanceTest","text":"","code":"library(dplyr) #> Warning: package ‘dplyr’ was built under R version 4.1.3 #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(iris)  # Add some metadata to iris data frame iris$Sample_ID <- rep(paste0(\"sample\", 1:10), each = 15) iris$Group <- rep(c(\"A\",\"B\"), each = 75)  # Run the AbundanceTest function AbundanceTest(cellmeta = iris, celltype.col = \"Species\", sample.col = \"Sample_ID\", group.col = \"Group\") #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #>     celltype fold.change    p.value mean.perc #> 1     setosa           0 0.02315095 0.3333333 #> 2 versicolor           1 1.00000000 0.3333333 #> 3  virginica         Inf 0.02315095 0.3333333"},{"path":"jarninggau.github.io/ProjectSVR/reference/AddProjQual.html","id":null,"dir":"Reference","previous_headings":"","what":"Add projection quality scores for the query cells. — AddProjQual","title":"Add projection quality scores for the query cells. — AddProjQual","text":"Add projection quality scores query cells.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AddProjQual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add projection quality scores for the query cells. — AddProjQual","text":"","code":"AddProjQual(object, k = 20, repeats = 10000)"},{"path":"jarninggau.github.io/ProjectSVR/reference/AddProjQual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add projection quality scores for the query cells. — AddProjQual","text":"object CellProject object k K nearest neighbors used. Default: 20 repeats number sample times generate background projection qualities.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AddProjQual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add projection quality scores for the query cells. — AddProjQual","text":"CellProject object","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AddProjQual.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Add projection quality scores for the query cells. — AddProjQual","text":"https://www.nature.com/articles/s41467-021-25957-x","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AlluviaPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Alluvial Plot — AlluviaPlot","title":"Plot Alluvial Plot — AlluviaPlot","text":"Plot Alluvial Plot","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AlluviaPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Alluvial Plot — AlluviaPlot","text":"","code":"AlluviaPlot(   cellmeta,   by,   fill,   colors = NULL,   bar.width = 0.5,   legend.ncol = 1 )"},{"path":"jarninggau.github.io/ProjectSVR/reference/AlluviaPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Alluvial Plot — AlluviaPlot","text":"cellmeta data frame containing cell metadata. character string specifying column name cellmeta used group cells. fill character string specifying column name cellmeta used fill plot. colors (optional) vector colours use filling plot. specified, default colour scheme used. bar.width numeric value 0 1 specifying width bars plot. legend.ncol integer specifying number columns legend.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AlluviaPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Alluvial Plot — AlluviaPlot","text":"ggplot object representing alluvial plot.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AlluviaPlot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Alluvial Plot — AlluviaPlot","text":"https://stackoverflow.com/questions/73372641/shaded-area--bars-using-ggplot2","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/AlluviaPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Alluvial Plot — AlluviaPlot","text":"","code":"AlluviaPlot(mtcars, \"cyl\", \"gear\")"},{"path":"jarninggau.github.io/ProjectSVR/reference/BoxPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"BoxPlot — BoxPlot","title":"BoxPlot — BoxPlot","text":"Create box plot jittered data points significance testing.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/BoxPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BoxPlot — BoxPlot","text":"","code":"BoxPlot(   cellmeta,   sample.col,   celltype.col,   group.col,   legend.ncol = NULL,   celltypes.show = NULL )"},{"path":"jarninggau.github.io/ProjectSVR/reference/BoxPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BoxPlot — BoxPlot","text":"cellmeta data frame containing information cells. sample.col column name sample identifier cellmeta. celltype.col column name cell type cellmeta. group.col column name grouping variable cellmeta. legend.ncol number columns legend (optional). celltypes.show character vector specifying cell types show (optional).","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/BoxPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"BoxPlot — BoxPlot","text":"ggplot object.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/CellProject-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The CellProject class — CellProject-class","title":"The CellProject class — CellProject-class","text":"main class used Monocle hold single cell expression data. CellDataSet extends basic Bioconductor ExpressionSet class.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/CellProject-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The CellProject class — CellProject-class","text":"class initialized matrix expression values Methods operate CellDataSet objects constitute basic Monocle workflow.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/CellProject-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The CellProject class — CellProject-class","text":"embeddings Matrix containing predicted embeddings computed ProjectNewdata. refined.embeddings Matrix containing refined predicted embeddings computed RefineProjection data data.frame containing source data cell projection. cellmeta data.frame containing data generated cell projection analysis. neighbors Neighbor class containing nearest neighbors calculating projection metrics.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ComputeModuleScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate gene module scores — ComputeModuleScore","title":"Calculate gene module scores — ComputeModuleScore","text":"Calculate gene module scores","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ComputeModuleScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate gene module scores — ComputeModuleScore","text":"","code":"ComputeModuleScore(x, ...)  # S3 method for default ComputeModuleScore(   x,   gene.sets,   min.size = 20,   batch.size = 500,   cores = 1,   ... )  # S3 method for Seurat ComputeModuleScore(   x,   gene.sets,   min.size = 20,   batch.size = 500,   cores = 1,   assay = Seurat::DefaultAssay(x),   ... )"},{"path":"jarninggau.github.io/ProjectSVR/reference/ComputeModuleScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate gene module scores — ComputeModuleScore","text":"x gene expression matrix, rows genes, columns cells. Can format, UMI, CPM, TPM, etc. ... Arguments passed methods. gene.sets list gene sets data.frame named list. min.size minimal genes gene sets. size gene sets less value ignored.  Default: 20 batch.size number cells calculated batch. Default: 500 cores number threads parallel computing. Default: 1 assay Name seurat object assay.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ComputeModuleScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate gene module scores — ComputeModuleScore","text":"signature score matrix Seurat object.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/CreateModelObject.html","id":null,"dir":"Reference","previous_headings":"","what":"save models — CreateModelObject","title":"save models — CreateModelObject","text":"save models","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/CreateModelObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save models — CreateModelObject","text":"","code":"CreateModelObject(model.list, gene.sets, bg.genes, ref.cellmeta)"},{"path":"jarninggau.github.io/ProjectSVR/reference/CreateModelObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save models — CreateModelObject","text":"model.list list models returned FitEnsemblSVM() FitEnsemblMultiClassif(). gene.sets list stores gene sets calculating gene-set score matrix. bg.genes vector stores bg genes calculating gene-set score matrix. ref.cellmeta data.frame stores cell types labels reference atlas.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/CreateModelObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"save models — CreateModelObject","text":"model class","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/DimTheme.html","id":null,"dir":"Reference","previous_headings":"","what":"theme for DimPlot — DimTheme","title":"theme for DimPlot — DimTheme","text":"theme DimPlot","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/DimTheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme for DimPlot — DimTheme","text":"","code":"DimTheme()"},{"path":"jarninggau.github.io/ProjectSVR/reference/EstimateKnnDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate KNN density on 2d embedding. — EstimateKnnDensity","title":"Estimate KNN density on 2d embedding. — EstimateKnnDensity","text":"Estimate KNN density 2d embedding.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/EstimateKnnDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate KNN density on 2d embedding. — EstimateKnnDensity","text":"","code":"EstimateKnnDensity(emb.mat, k = 10, n.bins = 50, n.mesh = 2, do.plot = TRUE)"},{"path":"jarninggau.github.io/ProjectSVR/reference/EstimateKnnDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate KNN density on 2d embedding. — EstimateKnnDensity","text":"emb.mat embedding matrix, rows cells, columns dimensions. k Number neighbors. Default: 10 n.bins number bins density resampling. Default: 50 n.mesh bin, density calculated around (n.mesh^2) points. Default: 3 .plot whether plot results. Default: TRUE.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/EstimateKnnDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate KNN density on 2d embedding. — EstimateKnnDensity","text":"GridDensity object","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/FindOptimalK.html","id":null,"dir":"Reference","previous_headings":"","what":"Find optimal components or topics for cNMF — FindOptimalK","title":"Find optimal components or topics for cNMF — FindOptimalK","text":"Find optimal components topics cNMF","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/FindOptimalK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find optimal components or topics for cNMF — FindOptimalK","text":"","code":"FindOptimalK(   counts.fn,   components,   tpm.fn = NULL,   out.path = NULL,   run.name = NULL,   n.iter = 100,   n.var.genes = 2000,   genes.fn = NULL,   seed = 1024,   cores = -1 )"},{"path":"jarninggau.github.io/ProjectSVR/reference/FindOptimalK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find optimal components or topics for cNMF — FindOptimalK","text":"counts.fn path cell x gene counts file. expected tab-delimited text file anndata object saved h5ad format. components vector, list K values tested cNMF. tpm.fn provided, load tpm data file. Otherwise compute counts file. Default: NULL .path output directory results placed. Default: current path. run.name subdirectory .path/run.name created output files name prefix. Default: current timestamp. n.iter number NMF iterations run K. Default: 100. n.var.genes (optional) number highest variance genes used running factorization. Default: 2000 genes.fn (optional)  List -dispersed genes used factorization steps. One gene per line. provided, -dispersed genes calculated automatically number genes use can set `n.var.genes` parameter . Default: NULL seed master seed used generate individual seed NMF replicate. Default: 1024 cores specifies many cores can used parallel. Default: available cores detected `parallel::detectCores()`.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/FitEnsemblMultiClassif.html","id":null,"dir":"Reference","previous_headings":"","what":"Training an ensemble classifier for cell type prediction. — FitEnsemblMultiClassif","title":"Training an ensemble classifier for cell type prediction. — FitEnsemblMultiClassif","text":"Training ensemble classifier cell type prediction.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/FitEnsemblMultiClassif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Training an ensemble classifier for cell type prediction. — FitEnsemblMultiClassif","text":"","code":"FitEnsemblMultiClassif(   feature.mat,   cell.types,   do.norm = NULL,   mlr3.model = \"classif.svm\",   batch.size = 5000,   n.models = 100,   balance.cell.type = TRUE,   cores = -1 )"},{"path":"jarninggau.github.io/ProjectSVR/reference/FitEnsemblMultiClassif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Training an ensemble classifier for cell type prediction. — FitEnsemblMultiClassif","text":"feature.mat signature score matrix, rows cells, columns features. cell.types data.frame recording cell types different granularity. .norm Whether normalize feature matrix. L1, L2, NULL. Default: NULL. mlr3.model classif.svm, classif.xgboost, classif.randomForest.  Default: classif.svm batch.size number cells model. Default: 5000 n.models number SVM model. Default: 100 balance.cell.type boolen determines whether performing balance sampling. Default: True cores number CPU training. Default: -1, use available threads.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/FitEnsemblMultiClassif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Training an ensemble classifier for cell type prediction. — FitEnsemblMultiClassif","text":"list trained learners.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/FitEnsembleSVM.html","id":null,"dir":"Reference","previous_headings":"","what":"Training an ensemble SVM model for embedding coordinates regression. — FitEnsembleSVM","title":"Training an ensemble SVM model for embedding coordinates regression. — FitEnsembleSVM","text":"Training ensemble SVM model embedding coordinates regression.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/FitEnsembleSVM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Training an ensemble SVM model for embedding coordinates regression. — FitEnsembleSVM","text":"","code":"FitEnsembleSVM(   feature.mat,   emb.mat,   cell.types = NULL,   do.norm = NULL,   batch.size = 5000,   n.models = 100,   balance.cell.type = FALSE,   cores = -1 )"},{"path":"jarninggau.github.io/ProjectSVR/reference/FitEnsembleSVM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Training an ensemble SVM model for embedding coordinates regression. — FitEnsembleSVM","text":"feature.mat signature score matrix, rows cells, columns features. emb.mat embedding matrix, rows cells, columns dimensions. cell.types named vector recording cell types. .norm Whether normalize feature matrix. L1, L2, NULL. Default: NULL. batch.size number cells model. Default: 5000 n.models number SVM model. Default: 100 balance.cell.type boolen determines whether performing balance sampling. Default: FALSE cores number CPU training. Default: -1, use available threads.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/FitEnsembleSVM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Training an ensemble SVM model for embedding coordinates regression. — FitEnsembleSVM","text":"list trained learners.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/GridDensity-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The GridDensity class — GridDensity-class","title":"The GridDensity class — GridDensity-class","text":"GridDensity class intermediate data class storing density cells bin (also mesh points) cell assignments nearest mesh point performing downstream analysis - production pseudo mini bulk RNA-seq counts grid differential expression analysis.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/GridDensity-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The GridDensity class — GridDensity-class","text":"data matrix records embedding matrix. mesh.points table records coordinates (primary key, <X,Y>), knn.density, bin coordinates, bin.ID, bin.density mesh point data.frame. cell2mp named vector, records cell assignments nearest mesh point.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/GroupPreferencePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Group Preference Plot — GroupPreferencePlot","title":"Create Group Preference Plot — GroupPreferencePlot","text":"function create heatmap displays O/E ratio two-column table grouped selected column.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/GroupPreferencePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Group Preference Plot — GroupPreferencePlot","text":"","code":"GroupPreferencePlot(   cellmeta,   group.by,   preference.on,   palette = \"Blues\",   column_names_rot = 0,   ... )"},{"path":"jarninggau.github.io/ProjectSVR/reference/GroupPreferencePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Group Preference Plot — GroupPreferencePlot","text":"cellmeta data frame. group.character string indicating name column `cellmeta` used grouping. preference.character string indicating name column `cellmeta` used calculating O/E ratio. palette color palette use plot. Default \"Blues\". column_names_rot degree (0-360) rotate x-axis labels. Default 0. ... additional arguments passed 'Heatmap' function ComplexHeatmap package.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/GroupPreferencePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Group Preference Plot — GroupPreferencePlot","text":"heatmap displays O/E ratio two-column table grouped selected column.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/GroupPreferencePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Group Preference Plot — GroupPreferencePlot","text":"","code":"data(mtcars) mtcars$cyl <- factor(mtcars$cyl) mtcars$carb <- factor(mtcars$carb) GroupPreferencePlot(mtcars, \"cyl\", \"carb\")"},{"path":"jarninggau.github.io/ProjectSVR/reference/KnnLabelTransfer.html","id":null,"dir":"Reference","previous_headings":"","what":"Label transfer via KNN — KnnLabelTransfer","title":"Label transfer via KNN — KnnLabelTransfer","text":"Label transfer via KNN","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/KnnLabelTransfer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label transfer via KNN — KnnLabelTransfer","text":"","code":"KnnLabelTransfer(query.emb, ref.emb, ref.labels, k = 100)"},{"path":"jarninggau.github.io/ProjectSVR/reference/KnnLabelTransfer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label transfer via KNN — KnnLabelTransfer","text":"query.emb embedding matrix query data. ref.emb embedding matrix reference atlas. ref.labels named vector <cell name, labels>. k K nearest neighbors used. Default: 100","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/KnnLabelTransfer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label transfer via KNN — KnnLabelTransfer","text":"data.frame contains prediction results.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/LabelTransfer.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper for transferring reference cell labels to the query via KNN method. — LabelTransfer","title":"A wrapper for transferring reference cell labels to the query via KNN method. — LabelTransfer","text":"wrapper transferring reference cell labels query via KNN method.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/LabelTransfer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper for transferring reference cell labels to the query via KNN method. — LabelTransfer","text":"","code":"LabelTransfer(   seu.q,   reference,   reduction.q = \"ref.umap\",   ref.emb.col = paste0(\"UMAP_\", 1:2),   ref.label.col = \"cluster.name\",   k = 10 )"},{"path":"jarninggau.github.io/ProjectSVR/reference/LabelTransfer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper for transferring reference cell labels to the query via KNN method. — LabelTransfer","text":"seu.q query Seurat object. reference Reference model. reduction.q Reduction name storing projected reference embeddings. Default 'ref.umap'. ref.emb.col column names storing reference embeddings reference model. ref.label.col column name storing cell labels transferred. k K param KNN model. Default 10.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/LabelTransfer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper for transferring reference cell labels to the query via KNN method. — LabelTransfer","text":"Seurat object. predicted cell type store 'knn.pred.celltype' column.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MajorityVote.html","id":null,"dir":"Reference","previous_headings":"","what":"Majority voting to harmonise cell labels on given over clusters — MajorityVote","title":"Majority voting to harmonise cell labels on given over clusters — MajorityVote","text":"Majority voting harmonise cell labels given clusters","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MajorityVote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Majority voting to harmonise cell labels on given over clusters — MajorityVote","text":"","code":"MajorityVote(   feature.mat = NULL,   over.clusters = NULL,   cell.types,   k = 20,   min.prop = 0 )"},{"path":"jarninggau.github.io/ProjectSVR/reference/MajorityVote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Majority voting to harmonise cell labels on given over clusters — MajorityVote","text":"feature.mat signature score matrix clustering, rows cells, columns features. .clusters named vector contains clusters majority vote. Default: NULL cell.types data.frame recording cell types different granularity. k k kmeans cluster. Default: 20 min.prop minimum proportion cells required support naming subcluster cell type. Default: 0","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MajorityVote.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Majority voting to harmonise cell labels on given over clusters — MajorityVote","text":"data.frame contains consensus predicted cell types.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MapQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper for mapping query data onto reference. — MapQuery","title":"A wrapper for mapping query data onto reference. — MapQuery","text":"wrapper mapping query data onto reference.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MapQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper for mapping query data onto reference. — MapQuery","text":"","code":"MapQuery(seu.q, reference, assay.q = \"RNA\", ncores = 1)"},{"path":"jarninggau.github.io/ProjectSVR/reference/MapQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper for mapping query data onto reference. — MapQuery","text":"seu.q query Seurat object. reference Reference model. assay.q assay used reference mapping. ncores Number threads calculation.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MapQuery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper for mapping query data onto reference. — MapQuery","text":"Seurat object. projected reference embeddings saved dimension reduction object named 'ref.umap'. gene set score saved new assay named 'UCell'.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MergeCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge cells around mesh points in each bin into pseudo-bulk gene expression matrix. — MergeCells","title":"Merge cells around mesh points in each bin into pseudo-bulk gene expression matrix. — MergeCells","text":"Merge cells around mesh points bin pseudo-bulk gene expression matrix.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MergeCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge cells around mesh points in each bin into pseudo-bulk gene expression matrix. — MergeCells","text":"","code":"MergeCells(dge, gd, by = \"mesh.points\", cores = -1)"},{"path":"jarninggau.github.io/ProjectSVR/reference/MergeCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge cells around mesh points in each bin into pseudo-bulk gene expression matrix. — MergeCells","text":"dge Matrix sparse matrix gene expression matrix rows genes, columns cells. gd GridDensity object. Merge raw counts \"bins\" \"mesh.points\". Default: \"mesh.points\" cores Number threads, -1 means available threads. Default: -1","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/MergeCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge cells around mesh points in each bin into pseudo-bulk gene expression matrix. — MergeCells","text":"gene expression matrix, rows genes, columns merged cells.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/NNHelper.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal helper function to dispatch to various neighbor finding methods — NNHelper","title":"Internal helper function to dispatch to various neighbor finding methods — NNHelper","text":"Internal helper function dispatch various neighbor finding methods","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/NNHelper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal helper function to dispatch to various neighbor finding methods — NNHelper","text":"","code":"NNHelper(data, query = data, k, method, ...)"},{"path":"jarninggau.github.io/ProjectSVR/reference/NNHelper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal helper function to dispatch to various neighbor finding methods — NNHelper","text":"data Input data query Data query data k Number nearest neighbors compute method \"rann\", \"sklearn\" ... args pass nn2() sknn().","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PercentageStat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cell population percentage — PercentageStat","title":"Calculate cell population percentage — PercentageStat","text":"function calculates percentage statistics based given dataset grouping variables.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PercentageStat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cell population percentage — PercentageStat","text":"","code":"PercentageStat(cellmeta, by, fill)"},{"path":"jarninggau.github.io/ProjectSVR/reference/PercentageStat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cell population percentage — PercentageStat","text":"cellmeta data frame containing cell metadata. character vector specifying variable(s) used group data. fill character vector specifying variable used fill data.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PercentageStat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cell population percentage — PercentageStat","text":"data frame containing calculated percentage statistics.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PercentageStat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate cell population percentage — PercentageStat","text":"","code":"PercentageStat(mtcars, \"cyl\", \"gear\") #> # A tibble: 9 × 5 #> # Groups:   cyl [3] #>   cyl   gear   Freq margin.freq proportion #>   <fct> <fct> <int>       <int>      <dbl> #> 1 4     3         1          11     0.0909 #> 2 6     3         2           7     0.286  #> 3 8     3        12          14     0.857  #> 4 4     4         8          11     0.727  #> 5 6     4         4           7     0.571  #> 6 8     4         0          14     0      #> 7 4     5         2          11     0.182  #> 8 6     5         1           7     0.143  #> 9 8     5         2          14     0.143"},{"path":"jarninggau.github.io/ProjectSVR/reference/PlotProjection.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualizing the projected query cells on reference via a density plot. — PlotProjection","title":"Visualizing the projected query cells on reference via a density plot. — PlotProjection","text":"Visualizing projected query cells reference via density plot.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PlotProjection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualizing the projected query cells on reference via a density plot. — PlotProjection","text":"","code":"PlotProjection(   seu.q,   reference,   ref.color.by,   ref.colors = NULL,   ref.alpha = 0.5,   ref.size = 0.5,   ref.emb.col = paste0(\"UMAP_\", 1:2),   query.reduction = \"ref.umap\",   query.size = 1,   query.alpha = 1,   split.by = NULL,   n.row = NULL,   legend.ncol = 1 )"},{"path":"jarninggau.github.io/ProjectSVR/reference/PlotProjection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualizing the projected query cells on reference via a density plot. — PlotProjection","text":"seu.q query Seurat object containing projected reference embeddings. reference Reference model. ref.color.Name column reference data used coloring points. ref.colors Vector colors used reference data points. Default: NULL ref.alpha Alpha value reference data points. Default: 0.5 ref.size Size reference data points. Default: 0.5 ref.emb.col column names storing reference embeddings reference model. query.reduction Reduction name use query data. Default: 'ref.umap' query.size Size query data points. Default: 1 query.alpha Alpha value query data points. Default: 1 split.Column name split query data . Default: NULL n.row Number rows facet_wrap splitting column. Default: NULL legend.ncol Number columns legend. Default: 1","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PlotProjection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualizing the projected query cells on reference via a density plot. — PlotProjection","text":"ggplot object.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PredictNewdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict cell types — PredictNewdata","title":"Predict cell types — PredictNewdata","text":"Predict cell types","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PredictNewdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict cell types — PredictNewdata","text":"","code":"PredictNewdata(feature.mat, model, do.norm = NULL, cores = -1)"},{"path":"jarninggau.github.io/ProjectSVR/reference/PredictNewdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict cell types — PredictNewdata","text":"feature.mat data.frame containing signature scores, rows cells, columns features. model trained learners returned `FitEnsemblMultiClassif()`. .norm Whether normalize feature matrix. L1, L2, NULL. Default: NULL. cores number threads prediction, -1 means available threads. Default: -1","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/PredictNewdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict cell types — PredictNewdata","text":"data.frame contains predicted results.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ProjectNewdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicting the embedding coordinates via the trained SVM model. — ProjectNewdata","title":"Predicting the embedding coordinates via the trained SVM model. — ProjectNewdata","text":"Predicting embedding coordinates via trained SVM model.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ProjectNewdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicting the embedding coordinates via the trained SVM model. — ProjectNewdata","text":"","code":"ProjectNewdata(   feature.mat,   model,   do.norm = NULL,   int.fun = stats::median,   cores = -1 )"},{"path":"jarninggau.github.io/ProjectSVR/reference/ProjectNewdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicting the embedding coordinates via the trained SVM model. — ProjectNewdata","text":"feature.mat data.frame containing signature scores, rows cells, columns features. model trained learners returned `FitEnsembleSVM()`. .norm Whether normalize feature matrix. L1, L2, NULL. Default: NULL. int.fun function integration predicted embedding different learners: mean, median, self defined function given vector returns value. Default: median. cores number threads prediction, -1 means available threads. Default: -1","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ProjectNewdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicting the embedding coordinates via the trained SVM model. — ProjectNewdata","text":"CellProject object containing source data predicted embedding matrix.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/RefineProjection.html","id":null,"dir":"Reference","previous_headings":"","what":"Refine low confidence mapping coords. — RefineProjection","title":"Refine low confidence mapping coords. — RefineProjection","text":"Refine low confidence mapping coords.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/RefineProjection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refine low confidence mapping coords. — RefineProjection","text":"","code":"RefineProjection(object, p.val.cutoff = 1, p.adj.cutoff = 0.05, k = 10)"},{"path":"jarninggau.github.io/ProjectSVR/reference/RefineProjection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refine low confidence mapping coords. — RefineProjection","text":"object CellProject object p.val.cutoff Interpolation coordinates cells p.value cutoff. Default: 1 p.adj.cutoff Interpolation coordinates cells p.value cutoff. Default: 0.05 k K nearest neighbors interpolation. Default: 10","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/RefineProjection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refine low confidence mapping coords. — RefineProjection","text":"CellProject object","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/RunCNMF.html","id":null,"dir":"Reference","previous_headings":"","what":"Run consensus NMF — RunCNMF","title":"Run consensus NMF — RunCNMF","text":"Run consensus NMF","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/RunCNMF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run consensus NMF — RunCNMF","text":"","code":"RunCNMF(   counts.fn,   K,   out.path = NULL,   run.name = NULL,   n.iter = 100,   n.var.genes = 2000,   genes.fn = NULL,   seed = 1024,   cores = -1,   n.top.genes = 100,   local.density.cutoff = 0.5,   local.neighborhood.size = 0.3,   show.clustering = FALSE )"},{"path":"jarninggau.github.io/ProjectSVR/reference/RunCNMF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run consensus NMF — RunCNMF","text":"counts.fn path cell x gene counts file. expected tab-delimited text file `anndata` object saved h5ad format. K int, number components (topics dimensions) cNMF. .path output directory results placed. Default: current path. run.name subdirectory .path/run.name created output files name prefix. Default: current timestamp. n.iter number NMF iterations run K. Default: 100. n.var.genes (optional) number highest variance genes used running factorization. Default: 2000 genes.fn (optional)  List -dispersed genes used factorization steps. One gene per line. provided, -dispersed genes calculated automatically number genes use can set `n.var.genes` parameter . Default: NULL seed master seed used generate individual seed NMF replicate. Default: 1024 cores specifies many cores can used parallel. Default: available cores detected `parallel::detectCores()`. n.top.genes number genes highest loadings gene expression program (GEP). Default: 100 local.density.cutoff threshold average distance K nearest neighbors use. 2.0 means nothing filtered . Default: 0.5 local.neighborhood.size Percentage replicates consider nearest neighbors local density filtering. E.g. run 100 replicates, set 0.3, 30 nearest neighbors used outlier detection. Default: 0.3 show.clustering whether clustergram image output. Default: FALSE","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/SplitCellProject.html","id":null,"dir":"Reference","previous_headings":"","what":"Split CellProject Object — SplitCellProject","title":"Split CellProject Object — SplitCellProject","text":"Split CellProject Object","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/SplitCellProject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split CellProject Object — SplitCellProject","text":"","code":"SplitCellProject(x, split.by)"},{"path":"jarninggau.github.io/ProjectSVR/reference/SplitCellProject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split CellProject Object — SplitCellProject","text":"x CellProject object split.Attribute splitting","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/SplitCellProject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split CellProject Object — SplitCellProject","text":"list CellProject object","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/VolcanoPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the Volcano Plot — VolcanoPlot","title":"Plot the Volcano Plot — VolcanoPlot","text":"Volcano plot visualizing cellular abundance difference. function accepts outputs `AbundanceTest()`.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/VolcanoPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the Volcano Plot — VolcanoPlot","text":"","code":"VolcanoPlot(   test.df,   p.value.cutoff = 0.001,   xlab = NULL,   ylab = NULL,   colors = NULL )"},{"path":"jarninggau.github.io/ProjectSVR/reference/VolcanoPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the Volcano Plot — VolcanoPlot","text":"test.df data frame `AbundanceTest()`. p.value.cutoff p-value cutoff showing cell type labels. Default: 0.001 xlab label x-axis. Default: NULL ylab label y-axis. Default: NULL colors vector colors used plot.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/VolcanoPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the Volcano Plot — VolcanoPlot","text":"ggplot object.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/cells.Neighbor.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the nearest cells for each query cell — cells.Neighbor","title":"Query the nearest cells for each query cell — cells.Neighbor","text":"Query nearest cells query cell","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/cells.Neighbor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the nearest cells for each query cell — cells.Neighbor","text":"","code":"cells.Neighbor(object)"},{"path":"jarninggau.github.io/ProjectSVR/reference/cells.Neighbor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the nearest cells for each query cell — cells.Neighbor","text":"object Neighbor object.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/cells.Neighbor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the nearest cells for each query cell — cells.Neighbor","text":"k nearest cell names query cell.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/dot-hist2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum the densities of each point over the bins — .hist2d","title":"Sum the densities of each point over the bins — .hist2d","text":"Sum densities point bins","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/dot-hist2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum the densities of each point over the bins — .hist2d","text":"","code":".hist2d(x, bins, mesh.density = 1)"},{"path":"jarninggau.github.io/ProjectSVR/reference/dot-hist2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum the densities of each point over the bins — .hist2d","text":"x matrix, n.col=2 bins matrix, n.col=2 mesh.density length(mesh.density) equals nrow(x). Default: 1","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/dot-hist2d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum the densities of each point over the bins — .hist2d","text":"data.frame mesh points. (X,Y) position, bin.ID, mesh.density, bin.density.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/mcFindAllMarkers.html","id":null,"dir":"Reference","previous_headings":"","what":"multi-core FindAllMarkers() — mcFindAllMarkers","title":"multi-core FindAllMarkers() — mcFindAllMarkers","text":"multi-core FindAllMarkers()","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/mcFindAllMarkers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multi-core FindAllMarkers() — mcFindAllMarkers","text":"","code":"mcFindAllMarkers(seu, do.flatten = TRUE, only.pos = TRUE, n.cores = 10, ...)"},{"path":"jarninggau.github.io/ProjectSVR/reference/mcFindAllMarkers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multi-core FindAllMarkers() — mcFindAllMarkers","text":"seu Seurat object .flatten Flattern marker list data.frame. Default: TRUE .pos positive markers. Default: TRUE n.cores number threads. Default: 10 ... Arguments passed Seurat::FindMarkers()","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/mcFindAllMarkers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multi-core FindAllMarkers() — mcFindAllMarkers","text":"data.frame list contains putative markers.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/mcFindAllMarkers.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"multi-core FindAllMarkers() — mcFindAllMarkers","text":"https://gist.github.com/diazdc/1735102c243cd16acb1b1f3fd09a26e1","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/merge.CellProject.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge CellProject Objects — merge.CellProject","title":"Merge CellProject Objects — merge.CellProject","text":"Merge CellProject Objects","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/merge.CellProject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge CellProject Objects — merge.CellProject","text":"","code":"# S3 method for CellProject merge(x, y, ...)"},{"path":"jarninggau.github.io/ProjectSVR/reference/merge.CellProject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge CellProject Objects — merge.CellProject","text":"x object y another object ... arguments passed methods.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/merge.CellProject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge CellProject Objects — merge.CellProject","text":"merged object","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/newCellProject.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a new CellProject object. — newCellProject","title":"Creates a new CellProject object. — newCellProject","text":"Creates new CellProject object.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/newCellProject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a new CellProject object. — newCellProject","text":"","code":"newCellProject(embeddings, data, cellmeta = NULL)"},{"path":"jarninggau.github.io/ProjectSVR/reference/newCellProject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a new CellProject object. — newCellProject","text":"embeddings matrix containing predicted embeddings data matrix containing source data cell projection cellmeta data frame containing cell meta data generated cell projection","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/newCellProject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a new CellProject object. — newCellProject","text":"new CellProject object","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/plot.GridDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid density plot — plot.GridDensity","title":"Grid density plot — plot.GridDensity","text":"Grid density plot","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/plot.GridDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid density plot — plot.GridDensity","text":"","code":"# S3 method for GridDensity plot(x, ...)"},{"path":"jarninggau.github.io/ProjectSVR/reference/plot.GridDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid density plot — plot.GridDensity","text":"x GridDensity object ... Arguments passed methods.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ribo.genes.html","id":null,"dir":"Reference","previous_headings":"","what":"A data set containing all human ribosomal genes — ribo.genes","title":"A data set containing all human ribosomal genes — ribo.genes","text":"data set containing human ribosomal genes","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ribo.genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A data set containing all human ribosomal genes — ribo.genes","text":"","code":"ribo.genes"},{"path":"jarninggau.github.io/ProjectSVR/reference/ribo.genes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A data set containing all human ribosomal genes — ribo.genes","text":"vector 184 elements:","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/ribo.genes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A data set containing all human ribosomal genes — ribo.genes","text":"https://www.gsea-msigdb.org/gsea/msigdb/cards/GOCC_RIBOSOME.html","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/sknn.html","id":null,"dir":"Reference","previous_headings":"","what":"Run sklearn.neighbors.NearestNeighbors — sknn","title":"Run sklearn.neighbors.NearestNeighbors — sknn","text":"Run sklearn.neighbors.NearestNeighbors","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/sknn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run sklearn.neighbors.NearestNeighbors — sknn","text":"","code":"sknn(data, query = data, k = 5L, ...)"},{"path":"jarninggau.github.io/ProjectSVR/reference/sknn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run sklearn.neighbors.NearestNeighbors — sknn","text":"data Input data query Data query data k Number nearest neighbors compute ... parameters pass sklearn.neighbors.NearestNeighbors().","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/subset.GridDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"subset a GridDensity object. — subset.GridDensity","title":"subset a GridDensity object. — subset.GridDensity","text":"subset GridDensity object.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/subset.GridDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset a GridDensity object. — subset.GridDensity","text":"","code":"# S3 method for GridDensity subset(   x,   bin.density.threshold = NULL,   mesh.density.threshold = -1,   n.cells.threshold = 10,   n.mesh.threshold = -1,   ... )"},{"path":"jarninggau.github.io/ProjectSVR/reference/subset.GridDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"subset a GridDensity object. — subset.GridDensity","text":"x, GridDensity object bin.density.threshold bins density greater value retained. Default: mean-3*sd mesh.density.threshold mesh points density greater value retained. filter mesh point directly. Default: -1 n.cells.threshold mesh points assigned cells less value retained. Default: 10 n.mesh.threshold bins number mesh pints less value retained. Default: -1 ... Arguments passed methods. Default: max number mesh points per bin minus 1.","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/subset2.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset CellProject Object — subset2","title":"Subset CellProject Object — subset2","text":"Subset CellProject Object","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/subset2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset CellProject Object — subset2","text":"","code":"subset2(x, cells)"},{"path":"jarninggau.github.io/ProjectSVR/reference/subset2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset CellProject Object — subset2","text":"x CellProject object cells cells subsetting","code":""},{"path":"jarninggau.github.io/ProjectSVR/reference/subset2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset CellProject Object — subset2","text":"subsetted CellProject object","code":""},{"path":"jarninggau.github.io/ProjectSVR/news/index.html","id":"projectsvr-010","dir":"Changelog","previous_headings":"","what":"ProjectSVR 0.1.0","title":"ProjectSVR 0.1.0","text":"Release ProjectSVR mapping query cells onto well-constructed reference atlas.","code":""}]
